"use strict";(self.webpackChunkdocusaurus_test=self.webpackChunkdocusaurus_test||[]).push([[277],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>f});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),p=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},u=function(t){var e=p(t.components);return a.createElement(s.Provider,{value:e},t.children)},c="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},h=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,s=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),c=p(n),h=r,f=c["".concat(s,".").concat(h)]||c[h]||m[h]||i;return n?a.createElement(f,l(l({ref:e},u),{},{components:n})):a.createElement(f,l({ref:e},u))}));function f(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,l=new Array(i);l[0]=h;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o[c]="string"==typeof t?t:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},1292:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:3},l="Script functions",o={unversionedId:"hpl2/script-functions",id:"hpl2/script-functions",title:"Script functions",description:"This page is incomplete.",source:"@site/docs/hpl2/script-functions.md",sourceDirName:"hpl2",slug:"/hpl2/script-functions",permalink:"/hpl/docs/hpl2/script-functions",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"custom_story_settings.cfg",permalink:"/hpl/docs/hpl2/files/custom_story_settings.cfg"},next:{title:"Tutorial",permalink:"/hpl/docs/category/tutorial"}},s={},p=[{value:"Entry point hooks",id:"entry-point-hooks",level:2},{value:"Math",id:"math",level:2}],u={toc:p},c="wrapper";function m(t){let{components:e,...n}=t;return(0,r.kt)(c,(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"script-functions"},"Script functions"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This page is incomplete.")),(0,r.kt)("p",null,"This page documents all scripts available in Amnesia: The Dark Descent."),(0,r.kt)("h2",{id:"entry-point-hooks"},"Entry point hooks"),(0,r.kt)("p",null,"The following functions are the main hps functions that the HPL2 engine looks to run on certain events - similar to the C++ int main() function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void OnStart();\n")),(0,r.kt)("p",null,"The function that runs only when the map is loaded for the first time."),(0,r.kt)("hr",null),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void OnEnter();\n")),(0,r.kt)("p",null,"The function that runs each time the player enters the map, including the first time."),(0,r.kt)("hr",null),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void OnLeave();\n")),(0,r.kt)("p",null,"The function that runs each time the player leaves the map."),(0,r.kt)("hr",null),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void OnUpdate(float afStep);\n")),(0,r.kt)("p",null,"The function that runs every time the game updates - usually 60 times per second. Generally only used for very specialized purposes that require constant synchronization with the game loop. Use with caution as complex logic can impact performance."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void OnGameStart();\n")),(0,r.kt)("p",null,"This function only applies to ",(0,r.kt)("inlineCode",{parentName:"p"},"global.hps")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"inventory.hps"),"."),(0,r.kt)("p",null,"Is it run only once, similarly to ",(0,r.kt)("inlineCode",{parentName:"p"},"OnStart"),', but is not associated with a map. It runs when the game is first started by the player (such as via "Start new game").'),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"math"},"Math"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"float RandFloat(float afMin, float afMax);\n")),(0,r.kt)("p",null,"Generates a random float."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"afMin - minimum value, inclusive."),(0,r.kt)("li",{parentName:"ul"},"afMax - maximum value, inclusive.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"int RandInt(int alMin, int alMax);\n")),(0,r.kt)("p",null,"Generates a random int. Note: the maximum value is inclusive - the RandInt() function may return this value."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"alMin - minimum value"),(0,r.kt)("li",{parentName:"ul"},"alMax - maximum value")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"bool StringContains(string& asString, string& asSubString);\n")),(0,r.kt)("p",null,'Checks whether a string contains the specified string.\nExample: searching for "hello" in "hello world" would return true.'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"asString - the string to check"),(0,r.kt)("li",{parentName:"ul"},"asSubString - the string to search for")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"string& StringSub(string& asString, int alStart, int alCount);\n")),(0,r.kt)("p",null,'Returns the substring in a string.\nExample: in the string "frictional games rocks", using 4 as alStart and 6 as alCount would return "tional".'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"asString - the string"),(0,r.kt)("li",{parentName:"ul"},"alStart - start position in the string"),(0,r.kt)("li",{parentName:"ul"},"alCount - amount of characters")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"int StringToInt(string&in asString);\n")),(0,r.kt)("small",null,"Since 1.3"),(0,r.kt)("p",null,"If possible, returns an integer converted from a string, else returns 0."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"asString")," - String to convert.")))}m.isMDXComponent=!0}}]);