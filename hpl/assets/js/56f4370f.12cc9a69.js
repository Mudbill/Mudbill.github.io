"use strict";(self.webpackChunkdocusaurus_test=self.webpackChunkdocusaurus_test||[]).push([[490],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(n),m=o,h=c["".concat(l,".").concat(m)]||c[m]||d[m]||i;return n?r.createElement(h,a(a({ref:t},u),{},{components:n})):r.createElement(h,a({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},519:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const i={},a="Getting started",s={unversionedId:"hpl2/tutorial/getting-started",id:"hpl2/tutorial/getting-started",title:"Getting started",description:"Let's get into it.",source:"@site/docs/hpl2/tutorial/2.getting-started.md",sourceDirName:"hpl2/tutorial",slug:"/hpl2/tutorial/getting-started",permalink:"/hpl/docs/hpl2/tutorial/getting-started",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/hpl/docs/hpl2/tutorial/introduction"},next:{title:"Hello world",permalink:"/hpl/docs/hpl2/tutorial/first-level"}},l={},p=[{value:"First steps",id:"first-steps",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started"},"Getting started"),(0,o.kt)("p",null,"Let's get into it."),(0,o.kt)("p",null,"The first thing we want to make sure we've done is to download and install the ",(0,o.kt)("a",{parentName:"p",href:"../tools"},"developer tools"),". It's a simple download-and-extract operation."),(0,o.kt)("p",null,"Next, let's set up the developer environment, ",(0,o.kt)("a",{parentName:"p",href:"../dev-env"},"as shown here"),"."),(0,o.kt)("p",null,"With this done, we will now go ahead and create our custom story."),(0,o.kt)("h2",{id:"first-steps"},"First steps"),(0,o.kt)("p",null,"Open a folder in the main TDD installation location. You will see many folders, such as ",(0,o.kt)("inlineCode",{parentName:"p"},"entities")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"static_objects"),", as well as some DLL-files (on Windows) and the main Amnesia executable. Locate a folder named ",(0,o.kt)("inlineCode",{parentName:"p"},"custom_stories"),". If it doesn't exist, create it."),(0,o.kt)("p",null,"Enter into ",(0,o.kt)("inlineCode",{parentName:"p"},"custom_stories"),' and create a new folder. This will be the folder for your own custom story. Name it however you like. I will name it "My Story" for this tutorial. It will look somewhat like this (but there are more files and folders than shown):'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Amnesia The Dark Descent/\n\u251c\u2500\u2500 billboards/\n\u251c\u2500\u2500 custom_stories/\n\u2502   \u2514\u2500\u2500 My Story/\n\u251c\u2500\u2500 entities/\n\u251c\u2500\u2500 static_objects/\n\u2514\u2500\u2500 Amnesia.exe\n")),(0,o.kt)("p",null,"Enter your custom folder and create a new file named ",(0,o.kt)("inlineCode",{parentName:"p"},"custom_story_settings.cfg"),"."),(0,o.kt)("admonition",{type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"Known file extensions are often hidden by default. Therefore you might end up with a file like ",(0,o.kt)("inlineCode",{parentName:"p"},"custom_story_settings.cfg.txt")," without knowing (because .txt is hidden) and this won't work. Make sure you enable all file extensions."),(0,o.kt)("p",{parentName:"admonition"},"On Windows, you can show file extensions through the options in the file explorer.")),(0,o.kt)("p",null,"The file we just created is the main entry point into the custom story. This file is required, and must contain a little information about your custom story and how it should load. The format for this file uses the ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/XML"},"XML syntax"),", and should have the following content:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Main\n    Name="Title for my story"\n    Author="Me"\n\n    StartMap="first_level.map"\n/>\n')),(0,o.kt)("p",null,"There are some more fields we can add, but for now this will do. Check ",(0,o.kt)("a",{parentName:"p",href:"../files/custom_story_settings.cfg"},"this page")," if you want to see all possible options."),(0,o.kt)("p",null,"Notice that we added ",(0,o.kt)("inlineCode",{parentName:"p"},"StartMap")," with a value of ",(0,o.kt)("inlineCode",{parentName:"p"},"first_level.map"),". This will be our initial level that loads when the custom story begins. You can change the name of this file, but you can only use A-Z, 0-9 and basic symbols such as ","_"," or -."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"A common naming convention used for maps is ",(0,o.kt)("inlineCode",{parentName:"p"},"XX_some_description.map")," where XX is replaced with 2 digits representing the order of when the map is first visited. For example ",(0,o.kt)("inlineCode",{parentName:"p"},"01_outside.map")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"02_inside.map"),". This makes it easier as the maps will sort by numbers rather than alphabetically.")),(0,o.kt)("p",null,"Before we create our first level, let's quickly make the ",(0,o.kt)("inlineCode",{parentName:"p"},"maps")," folder, next to ",(0,o.kt)("inlineCode",{parentName:"p"},"custom_story_settings.cfg"),". This is where we will place our levels."),(0,o.kt)("p",null,"You should now have the following folder structure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"custom_stories/\n\u2514\u2500\u2500 My Story/\n    \u251c\u2500\u2500 custom_story_settings.cfg\n    \u2514\u2500\u2500 maps/\n        \u2514\u2500\u2500 (maps will go here)\n")),(0,o.kt)("p",null,"With this in place, we can move on to creating a level."))}d.isMDXComponent=!0}}]);