"use strict";(self.webpackChunkdocusaurus_test=self.webpackChunkdocusaurus_test||[]).push([[882],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=o,f=c["".concat(s,".").concat(m)]||c[m]||h[m]||a;return n?i.createElement(f,r(r({ref:t},u),{},{components:n})):i.createElement(f,r({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,r[1]=l;for(var p=2;p<a;p++)r[p]=n[p];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2275:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var i=n(7462),o=(n(7294),n(3905));const a={},r="Scripting your levels",l={unversionedId:"hpl2/tutorial/scripting",id:"hpl2/tutorial/scripting",title:"Scripting your levels",description:"While levels can be nice to look at, they remain a bit dull if nothing ever happens. To get a bit of action going, we need to do a little bit of level scripting.",source:"@site/docs/hpl2/tutorial/5.scripting.md",sourceDirName:"hpl2/tutorial",slug:"/hpl2/tutorial/scripting",permalink:"/hpl/docs/hpl2/tutorial/scripting",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Moment of truth",permalink:"/hpl/docs/hpl2/tutorial/moment-of-truth"},next:{title:"Tools",permalink:"/hpl/docs/hpl2/tools"}},s={},p=[{value:"Add a script file to your level",id:"add-a-script-file-to-your-level",level:2},{value:"Let&#39;s write some scripts",id:"lets-write-some-scripts",level:2}],u={toc:p},c="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"scripting-your-levels"},"Scripting your levels"),(0,o.kt)("p",null,"While levels can be nice to look at, they remain a bit dull if nothing ever happens. To get a bit of action going, we need to do a little bit of level scripting."),(0,o.kt)("p",null,"HPL implements a scripting language called ",(0,o.kt)("a",{parentName:"p",href:"https://www.angelcode.com/angelscript/"},"AngelScript"),". This can be used for writing functionality into your level, by calling specific pre-defined functions. While the game engine itself is written in C++, you do not need to know anything of C++ to learn scripting in AngelScript."),(0,o.kt)("p",null,"A list of all available functions for ATDD can be found ",(0,o.kt)("a",{parentName:"p",href:"../script-functions"},"here"),"."),(0,o.kt)("h2",{id:"add-a-script-file-to-your-level"},"Add a script file to your level"),(0,o.kt)("p",null,"Scripts are simple text files with a ",(0,o.kt)("inlineCode",{parentName:"p"},".hps")," extension. The file name must match the name of the level you want to attach it to."),(0,o.kt)("p",null,"In our example, since we created the ",(0,o.kt)("inlineCode",{parentName:"p"},"first_level.map")," level, we would name our script file ",(0,o.kt)("inlineCode",{parentName:"p"},"first_level.hps"),". It should also exist in the same ",(0,o.kt)("inlineCode",{parentName:"p"},"maps")," folder as where the level is found."),(0,o.kt)("p",null,"Next up we just need to open this text file with a code editor. While the default Notepad in Windows works, it isn't recommended. A good and simple option is ",(0,o.kt)("a",{parentName:"p",href:"https://notepad-plus-plus.org/downloads/"},"Notepad++"),"."),(0,o.kt)("h2",{id:"lets-write-some-scripts"},"Let's write some scripts"),(0,o.kt)("p",null,"If you've never done any programming or scripting before, check out this guide to learn more about the absolute basics. For now, we will just briefly go over some introductory content."),(0,o.kt)("p",null,"Let's add one of the most common functions to our script file \u2013 the ",(0,o.kt)("inlineCode",{parentName:"p"},"OnStart")," hook."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="first_level.hps"',title:'"first_level.hps"'},"void OnStart()\n{\n\n}\n")),(0,o.kt)("p",null,"This is one of 5 functions that the engine will look for and attempt to automatically run when a level is being played. As you can imagine, this particular function will run a single time when the level is first started. It normally never runs more than 1 time per playthrough, so it's a good place to add code that will only happen once."),(0,o.kt)("p",null,"Let's use this opportunity to add some music to our level."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp",metastring:'title="first_level.hps"',title:'"first_level.hps"'},'void OnStart()\n{\n    PlayMusic("main_menu.ogg", true, 1.0f, 1.0f, 1, false);\n}\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"PlayMusic")," is one of the pre-defined functions available for use. With this in the level script, upon starting the map you should hear some music start to play. If you're a little confused what all the different values mean, let's have a look at the function signature:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"void PlayMusic(string& asMusicFile, bool abLoop, float afVolume, float afFadeTime, int alPrio, bool abResume);\n")),(0,o.kt)("p",null,"A function signature has 2 components; a name (in this case \"PlayMusic\"), and a list of parameters (everything between the parentheses). This combination must always be unique, and is how the game will know which particular function you're trying to call. This means it's possible to have multiple functions with the same name if they have a different set of parameters."),(0,o.kt)("p",null,"In addition to this, each function also has a ",(0,o.kt)("em",{parentName:"p"},"return type")," signified by a keyword at the start of the line. In this case this is ",(0,o.kt)("inlineCode",{parentName:"p"},"void")," which is the keyword used when there's nothing being returned."),(0,o.kt)("p",null,"This function has a list of 6 parameters, which are as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The first argument is a string type, and tells the game which sound file to play. This should match one of the .ogg files somewhere in the game folders, or you can try to add your own custom .ogg file."),(0,o.kt)("li",{parentName:"ul"},"The second argument is a boolean type, which says whether or not to loop the music file when it finishes."),(0,o.kt)("li",{parentName:"ul"},"The third argument is a floating point type, which specifies the volume to use for the music. 0.0f would be no volume, and 1.0f would be 100%."),(0,o.kt)("li",{parentName:"ul"},"The fourth argument is also a float. This one determines the time, in seconds, to use for fading the volume in from 0 to the target volume. Keeping this as 0.0f would instantly play the music at the volume given."),(0,o.kt)("li",{parentName:"ul"},"The fifth argument is an integer type, which just gives a simple priority to the music. Since only one music track can play at a time, the priority is used in case you have multiple ",(0,o.kt)("inlineCode",{parentName:"li"},"PlayMusic")," calls. If you have only one, it doesn't really do much."),(0,o.kt)("li",{parentName:"ul"},"Lastly, the sixth argument is another boolean that says, in the case that you stop the music, whether it should resume from where it stopped (true), or resume from the start (false).")))}h.isMDXComponent=!0}}]);